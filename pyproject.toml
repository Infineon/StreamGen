[tool.poetry]
name = "streamgen"
version = "1.0.2"
description = "🌌 a framework for generating streams of labeled data."
authors = ["Laurenz A. Farthofer <laurenz@hey.com>"]
packages = [{ include = "streamgen" }]
readme = "README.md"
license = "MIT"
repository = "https://github.com/Infineon/StreamGen"
documentation = "https://infineon.github.io/StreamGen/"
keywords = [
    "Python",
    "Data Generation",
    "Data Streams",
    "Continual Learning",
    "Data Structures",
    "Function Composition",
]

[tool.poe.tasks]
test = "coverage run --source=streamgen -m pytest -vv --durations=8"
convert_notebooks = "jupyter nbconvert --to markdown --config .jupyter/cfg.py"
publish_documentation = "portray on_github_pages"
build_documentation = "portray in_browser"
docs = ["convert_notebooks", "publish_documentation"]
docs_local = ["convert_notebooks", "build_documentation"]
build_paper = "docker run --rm --volume $PWD/docs:/data --env JOURNAL=joss openjournals/inara"

[tool.poetry.dependencies]
python = "^3.10"
# 🌳 Graphs and Trees
anytree = "^2.12.1"  # Apache license 2.0
graphviz = "^0.20.3"
# 📄 Data handling
numpy = "^1.26.4" # custom license -> seems permissive
pandas = "^2.2.1" # BSD 3-clause license
# 🖼️ Visualizations
matplotlib = "^3.8.3" # custom license -> seems permissive
seaborn = "^0.13.2"   # multiple licenses -> seems permissive (like MIT) if licenses are included
# ✍️ Typing
beartype = "^0.17.2" # MIT license
# 🖨️ Logging
loguru = "^0.7.2" # MIT license
rich = "^13.7.1"  # MIT license
# 🔁 Continual Learning
#avalanche-lib = { version = "^0.5.0", optional = true } # MIT license
continuum = { version = "^1.2.7", optional = true }     # MIT license
# version pins required for an import error caused by avalanche
torch = { version = "<=2.3", optional = true }        # MIT license
pytorchcv = { version = ">=0.0.67", optional = true } # MIT license
# 👾 Example/Application Dependencies
polars = { version = "^0.20.13", optional = true }    # MIT license
ipympl = { version = "^0.9.4", optional = true }
scikit-image = { version = "^0.24", optional = true }

[tool.poetry.extras]
examples = ["polars", "ipympl", "scikit-image"]
cl = [
    #"avalanche-lib",
    "continuum",
    "torch",
    "pytorchcv"]
all = [
    "polars",
    "ipympl",
    "scikit-image",
    #"avalanche-lib",
    "continuum",
]

[tool.poetry.group.dev.dependencies]
ruff = "^0.3.4"
pre-commit = "^3.6.2"
poethepoet = "^0.25.0"
pytest = "^8.0.2"
coverage = "^7.4.3"
jupyter = "^1.0.0"
ipywidgets = "^8.1.2"
nbconvert = "^7.16.2"
portray = "^1.8.0"
itables = "^2.0.0" # MIT license
qpsolvers = { extras = [
    "open-source-solvers",
], version = "^4.3.2" } # explicit install required to solve plotting issue in pytest
towncrier = "^24.7.1"

[tool.ruff]
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "dist",
    "venv",
    "examples/perlin_numpy.py",
]
line-length = 140
target-version = "py311"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "RUF001",
    "ANN101",
    "D211",
    "D213",
    "EXE003",
    "TCH003",
    "TD002",
    "PD901",
    "EXE005",
    "PLR0913",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.portray]
modules = ["streamgen"]
extra_dirs = ["examples"]

[tool.portray.mkdocs]
repo_name = "Infineon/StreamGen"
repo_url = "https://github.com/Infineon/StreamGen"
edit_uri = "https://github.com/Infineon/StreamGen/edit/main/docs"
copyright = "Copyright (c) 2024 Infineon Technologies AG. All rights reserved."

[tool.portray.mkdocs.theme]
name = "material"
favicon = "docs/images/milky-way_animated.png"
logo = "docs/images/milky-way_animated.png"

[tool.portray.mkdocs.theme.icon]
repo = "material/github"

# Documentation Navigation
[[tool.portray.mkdocs.nav]]
"🏘️ Home" = "README.md"

[[tool.portray.mkdocs.nav]]
"🏛️ Motivation and History" = "docs/motivation_and_history.md"

[[tool.portray.mkdocs.nav]]
"🗂️ Project Structure" = "docs/project_structure.md"

[[tool.portray.mkdocs.nav]]
[[tool.portray.mkdocs.nav."🪐📓 User Guide"]]
"🎲 Sampling from Static Distributions" = "examples/time series classification/01-static-distributions.md"

[[tool.portray.mkdocs.nav."🪐📓 User Guide"]]
"🌌 Creating Data Streams" = "examples/time series classification/02-data-streams.md"

[[tool.portray.mkdocs.nav."🪐📓 User Guide"]]
"📊 Data Drift Scenarios" = "examples/time series classification/03-drift-scenarios.md"

[[tool.portray.mkdocs.nav."🪐📓 User Guide"]]
"🏷️ Multi-Label Generation" = "examples/time series classification/04-multi-label-generation.md"

[[tool.portray.mkdocs.nav."🪐📓 User Guide"]]
"🌐 Wafer Map Generation - WM811k patterns" = "examples/wafer_map_generation.md"

[[tool.portray.mkdocs.nav."🪐📓 User Guide"]]
"🌐 Wafer Map Generation - generated patterns" = "examples/wafer_map_scratch_generation.md"

[[tool.portray.mkdocs.nav]]
[[tool.portray.mkdocs.nav."👨‍💻 Developers"]]
"⚒️ Guide" = "docs/developer_guide.md"

[[tool.portray.mkdocs.nav."👨‍💻 Developers"]]
"⚗️ Testing" = "docs/testing.md"

[[tool.portray.mkdocs.nav]]
"🕰️ Changelog" = "CHANGELOG.md"


[tool.towncrier]
package = "streamgen"
directory = "changelog"
filename = "CHANGELOG.md"
start_string = "<!-- towncrier release notes start -->\n"
underlines = ["", "", ""]
title_format = "## [{version}](https://github.com/Infineon/StreamGen/tree/{version}) - {project_date}"
issue_format = "[#{issue}](https://github.com/Infineon/StreamGen/issues/{issue})"

[[tool.towncrier.type]]
directory = "security"
name = "❗ Security"
showcontent = true

[[tool.towncrier.type]]
directory = "removed"
name = "➖ Removed"
showcontent = true

[[tool.towncrier.type]]
directory = "deprecated"
name = "🔥 Deprecated"
showcontent = true

[[tool.towncrier.type]]
directory = "added"
name = "➕ Added"
showcontent = true

[[tool.towncrier.type]]
directory = "changed"
name = "✨ Changed"
showcontent = true

[[tool.towncrier.type]]
directory = "fixed"
name = "🐛 Fixed"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "📦 Misc"
showcontent = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
